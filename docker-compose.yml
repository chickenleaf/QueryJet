version: '3.8'

services:
  elasticsearch:
    image: elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=password
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-u", "elastic:password", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 15s
      retries: 10
    volumes:
      - esdata:/usr/share/elasticsearch/data # Persist ES data

  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    # No direct dependency on elasticsearch needed here

  celery:
    build:
      context: . # Build context is the root, as celery_tasks/dockerfile copies only what's needed from there
      dockerfile: celery_tasks/dockerfile
    command: celery -A celery_tasks.celery_app worker -P threads --loglevel=info
    environment:
      ELASTICSEARCH_HOST: elasticsearch # Service name in docker-compose network
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: password
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672// # Full URL with credentials and hostname
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be ready
      elasticsearch:
        condition: service_healthy # Wait for Elasticsearch to be ready

  api: # Renamed from submit_blog/search_blog to a single API service
    build:
      context: . # Build context is the root
      dockerfile: Dockerfile # Use the new Dockerfile at the root
    ports:
      - "8000:8000" # Expose the API on host port 8000
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_USERNAME: elastic # Added for search and index creation
      ELASTICSEARCH_PASSWORD: password # Added for search and index creation
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672// # For celery_app in submit_blog
    depends_on:
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      celery:
        condition: service_started # It's good to wait for celery to start for tasks to be registered

volumes:
  esdata: # Define the volume for Elasticsearch persistence

